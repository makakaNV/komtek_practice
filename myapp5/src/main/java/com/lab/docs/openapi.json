{
  "openapi": "3.0.1",
  "info": {
    "title": "API для Лабораторной информационной системы",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Patients",
      "description": "Управление пациентами"
    },
    {
      "name": "TestTypes",
      "description": "Управление типами тестов"
    },
    {
      "name": "Orders",
      "description": "Управление заявками"
    },
    {
      "name": "Tests",
      "description": "Управление тестами"
    }
  ],
  "paths": {
    "/api/v1/tests/{id}": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Получить лаб. исследования по ID",
        "description": "Возвращает лаб. исследования по указанному ID",
        "operationId": "getTestById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Лаб исследования не найдены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Лаб. исследования успешно найдены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tests"
        ],
        "summary": "Обновить лаб. исследование",
        "description": "Обновляет данные лаб. исследования по указанному ID",
        "operationId": "updateTest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "лаб. исследование успешно обновлено",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestDTO"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные лаб. исследования",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "лаб. исследование не найдено",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tests/{id}/result": {
      "put": {
        "tags": [
          "Tests"
        ],
        "summary": "Добавляет результат лаб. исследования",
        "description": "Добавляет результат лаб. исследования по указанному ID",
        "operationId": "updateTestResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": {
                  "result": "New result"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Некорректные данные для обновления лаб. исследования",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Лаб. исследование не найдено",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Результат лаб. исследования успешно добавлен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-types/{id}": {
      "get": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Получить тип лаб. исследований по ID",
        "description": "Возвращает тип лаб. исследований по указанному идентификатору",
        "operationId": "getTestTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Тип лаб. исследований успешно найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestTypeDTO"
                }
              }
            }
          },
          "404": {
            "description": "Тип лаб. исследований не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Обновить тип лаб. исследований",
        "description": "Обновляет данные типа лаб. исследований по указанному id",
        "operationId": "updateTestType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestTypeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Тип лаб. исследований успешно обновлен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestTypeDTO"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные типа лаб. исследований",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Тип лаб. исследований не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Удалить тип лаб. исследований",
        "description": "Удаляет тип лаб. исследований по указанному идентификатору",
        "operationId": "deleteTestType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Тип лаб. исследований успешно удален"
          },
          "404": {
            "description": "Тип лаб. исследований не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/{id}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Получить пациента по ID",
        "description": "Возвращает пациента по указанному идентификатору",
        "operationId": "getPatient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Пациент не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Пациент успешно найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Patients"
        ],
        "summary": "Обновить пациента",
        "description": "Обновляет данные пациента по указанному идентификатору",
        "operationId": "updatePatient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Пациент не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Пациент успешно обновлен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные пациента",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Patients"
        ],
        "summary": "Удалить пациента",
        "description": "Удаляет пациента по указанному идентификатору",
        "operationId": "deletePatient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Пациент не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Пациент успешно удален"
          }
        }
      }
    },
    "/api/v1/orders/{id}/status": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Обновить статус заявки",
        "description": "Обновляет поле status у заявки",
        "operationId": "updateOrderStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "REGISTERED",
                "IN_PROGRESS",
                "COMPLETED",
                "CANCELED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Заявка успешно обновлена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Заявка не найдена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tests": {
      "get": {
        "tags": [
          "Tests"
        ],
        "summary": "Получить все лаб. исследования",
        "description": "Возвращает список всех лаб. исследований",
        "operationId": "getAllTests",
        "responses": {
          "200": {
            "description": "Список тестов успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestDTO"
                }
              }
            }
          },
          "404": {
            "description": "Лаб. исследования не найдены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tests"
        ],
        "summary": "Создать новое лаб. исследование",
        "description": "Создает новое лаб. исследование на основе переданных данных",
        "operationId": "createTest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Лаб. исследование успешно создано",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestDTO"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные лаб. исследования",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/test-types": {
      "get": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Получить все типы лаб. исследований",
        "description": "Возвращает список всех типов лаб. исследований",
        "operationId": "getAllTestTypes",
        "responses": {
          "200": {
            "description": "Список типов лаб. исследований успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestTypeDTO"
                }
              }
            }
          },
          "404": {
            "description": "Типы лаб. исследования не найдены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestTypes"
        ],
        "summary": "Создать новый тип лаб. исследований",
        "description": "Создает новый тип лаб. исследований на основе переданных данных",
        "operationId": "createTestType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestTypeDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Тип лаб. исследований успешно создан",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestTypeDTO"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные типа лаб. исследований",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Получить всех пациентов",
        "description": "Возвращает список всех пациентов",
        "operationId": "getAllPatients",
        "responses": {
          "200": {
            "description": "Список пациентов успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "404": {
            "description": "Пациенты не найдены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Создать нового пациента",
        "description": "Создает нового пациента на основе переданных данных",
        "operationId": "createPatient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Пациент успешно создан",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные пациента",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Получить все заявки",
        "description": "Возвращает список всех заявок",
        "operationId": "getAllOrders",
        "responses": {
          "404": {
            "description": "Заявки не найдены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Список заявок успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Создать новую заявку",
        "description": "Создает новую заявку на основе переданных данных",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Заявка успешно создана",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Некорректные данные заявки",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/{patientId}/orders": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Получить заказы пациента",
        "description": "Возвращает список заказов для указанного пациента",
        "operationId": "getPatientOrders",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список заказов успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Пациент не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/search": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Поиск пациентов по ФИО",
        "description": "Возвращает список пациентов, соответствующих указанным параметрам поиска",
        "operationId": "searchPatients",
        "parameters": [
          {
            "name": "lastName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "middleName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список пациентов успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "404": {
            "description": "Пациент не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/patients/search-by-birthdate": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Поиск пациентов по дате рождения",
        "description": "Возвращает список пациентов, родившихся в указанную дату",
        "operationId": "searchPatientsByBirthDate",
        "parameters": [
          {
            "name": "birthDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список пациентов успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDTO"
                }
              }
            }
          },
          "404": {
            "description": "Пациент не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{orderId}/tests": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Получить лаб. исследования по ID заявки",
        "description": "Возвращает список лаб. исследований по ID заявки",
        "operationId": "getTestsByOrderId",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Лаб. исследования не найдены",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Список заявок успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TestDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Получить заявку по ID",
        "description": "Возвращает заявку по указанному ID",
        "operationId": "getOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Заявка успешна найдена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Заявка не найдена",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Удаление заявки",
        "description": "Удаляет заявку по указанному идентификатору",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Заявка не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "204": {
            "description": "Заявка успешно удален"
          }
        }
      }
    },
    "/api/v1/orders/patient/{patientId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Получить заявки по ID пациента",
        "description": "Возвращает список заявок по ID пациента",
        "operationId": "getOrdersByPatientId",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Пациент не найден",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200": {
            "description": "Список заявок успешно получен",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TestDTO": {
        "required": [
          "executionDate",
          "orderId",
          "referenceValues",
          "result",
          "status",
          "testTypeId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "orderId": {
            "maximum": 1000000,
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "testTypeId": {
            "maximum": 1000000,
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "executionDate": {
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "referenceValues": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "COMPLETED"
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TestTypeDTO": {
        "required": [
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "code": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        }
      },
      "PatientDTO": {
        "required": [
          "birthDate",
          "firstName",
          "gender",
          "lastName",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "middleName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "birthDate": {
            "type": "string",
            "format": "date"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "OrderDTO": {
        "required": [
          "patientId",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "patientId": {
            "maximum": 1000000,
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELED"
            ]
          },
          "comment": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        }
      }
    }
  }
}